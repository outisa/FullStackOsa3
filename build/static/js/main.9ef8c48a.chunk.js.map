{"version":3,"sources":["components/Person.js","services/persons.js","App.js","index.js"],"names":["Person","person","removeContact","key","id","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Filter","props","value","filterData","onChange","handleFilter","PersonForm","onSubmit","addName","newName","handleNewName","newNumber","handleNewNumber","type","Persons","rows","Notification","errorMessage","message","className","App","useState","persons","setPersons","setErrorMessage","setMessage","SetNewName","SetNewNumber","setFilterData","showAll","setShowAll","useEffect","console","log","personService","initialPersons","showMessage","timeout","showErrorMessage","setTimeout","filterPersons","filter","toLowerCase","includes","event","target","preventDefault","isOnList","find","element","window","confirm","changendPerson","p","updatetPerson","map","catch","error","returnedPerson","concat","n","removeFromList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ef8c48a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person,removeContact }) => {\n    return (\n        <li key={person.id}>\n        {person.name}  {person.number}  \n        <button onClick={removeContact}>delete</button>\n        </li>\n    )\n}\n\nexport default Person","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n    \n}\n\nexport default { getAll, create, update, remove}","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport personService from './services/persons'\nimport './index.css'\n\nconst Filter = (props) => {\n    return (\n        <form>\n            <div>\n                filter shown with: <input \n                value={props.filterData}\n                onChange={props.handleFilter}/>\n            </div>\n        </form>\n    )\n}\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.addName}>\n            <div>\n                name: <input\n                value={props.newName}\n                onChange={props.handleNewName}\n                />\n            </div>                \n            <div>\n                number: <input \n                value={props.newNumber}\n                onChange={props.handleNewNumber}\n                />\n            </div>\n            <div>\n                <button type='submit'>add</button>\n            </div>\n        </form>\n    )    \n}\n\nconst Persons = (props) => {\n    return (\n        <ul>{ props.rows }</ul>\n    )\n}\n\nconst Notification = ( { errorMessage, message } ) => {\n\n    if (errorMessage === null & message === null) {\n        return null\n    } else if (message === null) {\n        return (\n            <div className=\"error\">\n                {errorMessage}\n            </div>\n        )\n    } else if (errorMessage === null) {\n        return (\n            <div className=\"added\">\n              {message}\n            </div>\n        )\n    }    \n}\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [errorMessage, setErrorMessage] = useState(null)\n    const [message, setMessage] = useState(null)\n    const [ newName, SetNewName ] = useState('')\n    const [ newNumber, SetNewNumber] = useState('')\n    const [ filterData, setFilterData] = useState('')\n    const [ showAll, setShowAll] = useState(true)\n\n    useEffect (() => {\n        console.log('effect')\n        personService\n            .getAll()\n            .then( initialPersons => {\n                console.log('promise fulfilled')\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    \n    const showMessage = message => {\n        setMessage(`${message}`)\n        timeout()  \n    }\n\n    const showErrorMessage = errorMessage => {\n        setErrorMessage(`${errorMessage}`)\n        timeout() \n    }\n\n    const timeout = () => {\n        setTimeout(() => {\n            setMessage(null)\n            setErrorMessage(null)\n            }, 5000);\n        SetNewName('')\n        SetNewNumber('')  \n    }\n\n    const addName = (event) => {\n        event.preventDefault()\n        const isOnList = persons.find(function(element) {\n            return element.name === newName\n        })\n        console.log(isOnList)\n        if (typeof isOnList !== 'undefined' && isOnList.name === newName) {\n            const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n            if (result) {\n                const person = persons.find(p => p.id === isOnList.id)\n                const changendPerson = { ...person, number: newNumber}\n                personService\n                  .update(isOnList.id, changendPerson)\n                  .then(updatetPerson => {\n                    showMessage(`Number changed for ${newName}`)\n                    setPersons(persons.map(person => person.id !== isOnList.id ? person : updatetPerson))\n                  })\n                  .catch(error => {\n                    showErrorMessage(`Information of ${isOnList.name} has already been removed from server.`)\n                    setPersons(persons.filter(p => p.id !== isOnList.id))\n                })  \n            }\n        } else {    \n            const nameObject = {\n                name: newName,\n                number: newNumber\n            }\n            personService\n              .create(nameObject)\n              .then(returnedPerson => {\n                showMessage(`Added ${newName}`)  \n               setPersons(persons.concat(returnedPerson))\n               }).catch(error => {\n                   showErrorMessage(error.response.data.error)\n               })\n        }    \n    }\n    \n    const removeFromList = (id) => {\n        const person = persons.find(n => n.id === id)\n        console.log(person)\n        const result = window.confirm(`Delete ${person.name} ? `)\n        if(result) {\n            personService\n            .remove(person.id)\n            .then(response => {\n                showMessage(`${person.name} was deleted from server.`) \n                console.log(response.data)\n                setPersons(persons.filter(p => p.id !== person.id))\n            })\n            .catch(error => {\n                console.log(error.error)\n                showErrorMessage(`${person.name} has already been removed from server.`, error.error)\n                setPersons(persons.filter(p => p.id !== person.id))\n            })\n        } \n    }\n    const handleNewName = (event) => {\n        console.log(event.target.value)\n        SetNewName(event.target.value)\n    }\n    const handleNewNumber = (event) => {\n        console.log(event.target.value)\n        SetNewNumber(event.target.value)\n    }\n\n    const filterPersons = showAll\n      ? persons\n      : persons.filter(person => person.name.toLowerCase().includes(filterData.toLowerCase()))\n\n    const rows = () => filterPersons.map(person => \n        <Person \n        key={person.id}\n        person={person} \n        removeContact={() => removeFromList(person.id)} \n        />\n    )\n    const handleFilter = (event) => {\n        setFilterData(event.target.value)\n        console.log(event.target.value)\n        if (event.target.value !== '' && showAll === true) { \n            setShowAll(!showAll)\n        } else if (event.target.value === '') {\n            setShowAll(showAll)\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification errorMessage={errorMessage} message={message}/>\n            <Filter filterData={filterData} handleFilter={handleFilter}/>\n            <h2>Add a new contact</h2>\n            <PersonForm addName={addName} newName={newName}\n              handleNewName={handleNewName} newNumber={newNumber}\n              handleNewNumber={handleNewNumber}/>\n            <h2>Numbers</h2>\n            <Persons rows={ rows() }/>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}